version: '3.8'

services:
  ptz-control:
    build:
      context: .
      dockerfile: Dockerfile
    network_mode: "host"
   # ports:
   #y   - "5000:5000" # Flask app
    devices:
      - "/dev/video0:/dev/video0" # Access the host camera
    volumes:
      - "./logs:/app/logs" # Optional: Logs directory
    environment:
      - FLASK_ENV=production
    #restart: always

  mediamtx:
    image: bluenviron/mediamtx:latest
    container_name: mediamtx
    network_mode: "host"
#    ports:
#      - "8888:8888" # HLS port
#      - "8889:8889" # WebRTC port
    volumes:
      - "./mediamtx.yml:/config/mediamtx.yml" # Custom MediaMTX configuration
    #restart: always

  ffmpeg:
    image: jrottenberg/ffmpeg:latest
    container_name: ffmpeg
    volumes:
      - "./start-ffmpeg.sh:/start-ffmpeg.sh"  # Mount the startup script
    devices:
      - "/dev/video0:/dev/video0"
    privileged: true  # Ensure access to devices
    entrypoint: ["/bin/bash", "/start-ffmpeg.sh"]  # Use the retry script
    network_mode: "host"

  # ffmpeg:
  #   image: jrottenberg/ffmpeg:latest
  #   container_name: ffmpeg
  #   command: >
  #     -f v4l2 -input_format mjpeg -video_size 800x450 -framerate 30 -i /dev/video0 -vcodec libx264 -preset ultrafast -tune zerolatency -pix_fmt yuv420p -f rtsp rtsp://127.0.0.1:8554/live
  #   devices:
  #     - "/dev/video0:/dev/video0" # Access the host camera
  #   restart: always
  #   network_mode: "host"
